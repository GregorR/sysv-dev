
  $ ../configure --prefix=/usr/gnu --program-prefix=g --host=i386-sysv4 fu_cv_sys_mounted_fread=yes gl_cv_func_posix_spawn_file_actions_addclose_works=no gl_cv_func_posix_spawn_file_actions_adddup2_works=no gl_cv_func_posix_spawn_file_actions_addopen_works=no gl_cv_func_posix_spawn_works=no ac_cv_type_posix_spawn_file_actions_t=no ac_cv_type_posix_spawnattr_t=no CFLAGS="-O2 -g -DOK_TO_USE_1S_CLOCK"

diff -r 07b943a1c2ba lib/fcntl.c
--- a/lib/fcntl.c	Fri Aug 24 10:16:11 2012 -0400
+++ b/lib/fcntl.c	Fri Aug 24 10:16:40 2012 -0400
@@ -186,6 +186,9 @@
       {
         int target = va_arg (arg, int);
         /* Detect invalid target; needed for cygwin 1.5.x.  */
+#ifdef __svr4__
+        errno = EINVAL;
+#else
         if (target < 0 || getdtablesize () <= target)
           errno = EINVAL;
         else
@@ -210,6 +213,7 @@
               result = _gl_register_dup (fd, result);
 # endif
           }
+#endif /* svr4 */
         break;
       } /* F_DUPFD */
 #endif /* FCNTL_DUPFD_BUGGY || REPLACE_FCHDIR */
diff -r 07b943a1c2ba lib/getaddrinfo.c
--- a/lib/getaddrinfo.c	Fri Aug 24 10:16:11 2012 -0400
+++ b/lib/getaddrinfo.c	Fri Aug 24 10:16:40 2012 -0400
@@ -187,9 +187,11 @@
       const char *proto =
         (hints && hints->ai_socktype == SOCK_DGRAM) ? "udp" : "tcp";
 
+#ifndef __svr4__
       if (hints == NULL || !(hints->ai_flags & AI_NUMERICSERV))
         /* FIXME: Use getservbyname_r if available. */
         se = getservbyname (servname, proto);
+#endif
 
       if (!se)
         {
@@ -205,8 +207,10 @@
         port = se->s_port;
     }
 
+#ifndef __svr4__
   /* FIXME: Use gethostbyname_r if available. */
   he = gethostbyname (nodename);
+#endif
   if (!he || he->h_addr_list[0] == NULL)
     return EAI_NONAME;
 
diff -r 07b943a1c2ba lib/getloadavg.c
--- a/lib/getloadavg.c	Fri Aug 24 10:16:11 2012 -0400
+++ b/lib/getloadavg.c	Fri Aug 24 10:16:40 2012 -0400
@@ -337,7 +337,9 @@
 #  ifndef __VMS
 #   ifndef __linux__
 #    ifndef NLIST_STRUCT
+#ifndef __svr4__
 #     include <a.out.h>
+#endif
 #    else /* NLIST_STRUCT */
 #     include <nlist.h>
 #    endif /* NLIST_STRUCT */
@@ -460,7 +462,7 @@
 /* Offset in kmem to seek to read load average, or 0 means invalid.  */
 static long offset;
 
-#  if ! defined __VMS && ! defined sgi && ! defined __linux__
+#  if ! defined __VMS && ! defined sgi && ! defined __linux__ && ! defined __svr4__
 static struct nlist name_list[2];
 #  endif
 
@@ -899,6 +901,7 @@
   /* Get the address of LDAV_SYMBOL.  */
   if (offset == 0)
     {
+#ifndef __svr4__
 #  ifndef sgi
 #   if ! defined NLIST_STRUCT || ! defined N_NAME_POINTER
       strcpy (name_list[0].n_name, LDAV_SYMBOL);
@@ -934,6 +937,7 @@
       if (ldav_off != -1)
         offset = (long int) ldav_off & 0x7fffffff;
 #  endif /* sgi */
+#endif /* svr4 */
     }
 
   /* Make sure we have /dev/kmem open.  */
diff -r 07b943a1c2ba lib/mountlist.c
--- a/lib/mountlist.c	Fri Aug 24 10:16:11 2012 -0400
+++ b/lib/mountlist.c	Fri Aug 24 10:16:40 2012 -0400
@@ -675,6 +675,9 @@
     while (fread (&mnt, sizeof mnt, 1, fp) > 0)
       {
         me = xmalloc (sizeof *me);
+#ifdef __svr4__
+        me->me_devname = xstrdup(mnt.mnt_special);
+#else
 # ifdef GETFSTYP                        /* SVR3.  */
         me->me_devname = xstrdup (mnt.mt_dev);
 # else
@@ -682,7 +685,12 @@
         strcpy (me->me_devname, "/dev/");
         strcpy (me->me_devname + 5, mnt.mt_dev);
 # endif
+#endif
+#ifdef __svr4__
+        me->me_mountdir = xstrdup (mnt.mnt_mountp);
+#else
         me->me_mountdir = xstrdup (mnt.mt_filsys);
+#endif
         me->me_dev = (dev_t) -1;        /* Magic; means not known yet. */
         me->me_type = "";
         me->me_type_malloced = 0;
